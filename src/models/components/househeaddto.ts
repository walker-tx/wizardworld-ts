/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HouseHeadDto = {
  id?: string | undefined;
  firstName?: string | null | undefined;
  lastName?: string | null | undefined;
};

/** @internal */
export const HouseHeadDto$inboundSchema: z.ZodType<
  HouseHeadDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  firstName: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
});

/** @internal */
export type HouseHeadDto$Outbound = {
  id?: string | undefined;
  firstName?: string | null | undefined;
  lastName?: string | null | undefined;
};

/** @internal */
export const HouseHeadDto$outboundSchema: z.ZodType<
  HouseHeadDto$Outbound,
  z.ZodTypeDef,
  HouseHeadDto
> = z.object({
  id: z.string().optional(),
  firstName: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HouseHeadDto$ {
  /** @deprecated use `HouseHeadDto$inboundSchema` instead. */
  export const inboundSchema = HouseHeadDto$inboundSchema;
  /** @deprecated use `HouseHeadDto$outboundSchema` instead. */
  export const outboundSchema = HouseHeadDto$outboundSchema;
  /** @deprecated use `HouseHeadDto$Outbound` instead. */
  export type Outbound = HouseHeadDto$Outbound;
}

export function houseHeadDtoToJSON(houseHeadDto: HouseHeadDto): string {
  return JSON.stringify(HouseHeadDto$outboundSchema.parse(houseHeadDto));
}

export function houseHeadDtoFromJSON(
  jsonString: string,
): SafeParseResult<HouseHeadDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HouseHeadDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HouseHeadDto' from JSON`,
  );
}
