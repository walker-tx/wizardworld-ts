/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetHousesRequest = {
  query?: components.GetHousesQuery | undefined;
};

export type GetHousesResponse =
  | string
  | Array<components.HouseDto>
  | Array<components.HouseDto>;

/** @internal */
export const GetHousesRequest$inboundSchema: z.ZodType<
  GetHousesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  query: components.GetHousesQuery$inboundSchema.optional(),
});

/** @internal */
export type GetHousesRequest$Outbound = {
  query?: components.GetHousesQuery$Outbound | undefined;
};

/** @internal */
export const GetHousesRequest$outboundSchema: z.ZodType<
  GetHousesRequest$Outbound,
  z.ZodTypeDef,
  GetHousesRequest
> = z.object({
  query: components.GetHousesQuery$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHousesRequest$ {
  /** @deprecated use `GetHousesRequest$inboundSchema` instead. */
  export const inboundSchema = GetHousesRequest$inboundSchema;
  /** @deprecated use `GetHousesRequest$outboundSchema` instead. */
  export const outboundSchema = GetHousesRequest$outboundSchema;
  /** @deprecated use `GetHousesRequest$Outbound` instead. */
  export type Outbound = GetHousesRequest$Outbound;
}

export function getHousesRequestToJSON(
  getHousesRequest: GetHousesRequest,
): string {
  return JSON.stringify(
    GetHousesRequest$outboundSchema.parse(getHousesRequest),
  );
}

export function getHousesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetHousesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetHousesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetHousesRequest' from JSON`,
  );
}

/** @internal */
export const GetHousesResponse$inboundSchema: z.ZodType<
  GetHousesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(components.HouseDto$inboundSchema),
  z.array(components.HouseDto$inboundSchema),
]);

/** @internal */
export type GetHousesResponse$Outbound =
  | string
  | Array<components.HouseDto$Outbound>
  | Array<components.HouseDto$Outbound>;

/** @internal */
export const GetHousesResponse$outboundSchema: z.ZodType<
  GetHousesResponse$Outbound,
  z.ZodTypeDef,
  GetHousesResponse
> = z.union([
  z.string(),
  z.array(components.HouseDto$outboundSchema),
  z.array(components.HouseDto$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHousesResponse$ {
  /** @deprecated use `GetHousesResponse$inboundSchema` instead. */
  export const inboundSchema = GetHousesResponse$inboundSchema;
  /** @deprecated use `GetHousesResponse$outboundSchema` instead. */
  export const outboundSchema = GetHousesResponse$outboundSchema;
  /** @deprecated use `GetHousesResponse$Outbound` instead. */
  export type Outbound = GetHousesResponse$Outbound;
}

export function getHousesResponseToJSON(
  getHousesResponse: GetHousesResponse,
): string {
  return JSON.stringify(
    GetHousesResponse$outboundSchema.parse(getHousesResponse),
  );
}

export function getHousesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetHousesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetHousesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetHousesResponse' from JSON`,
  );
}
