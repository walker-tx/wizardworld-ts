/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetHousesIdRequest = {
  id: string;
};

export type GetHousesIdResponse = components.HouseDto | string;

/** @internal */
export const GetHousesIdRequest$inboundSchema: z.ZodType<
  GetHousesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetHousesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetHousesIdRequest$outboundSchema: z.ZodType<
  GetHousesIdRequest$Outbound,
  z.ZodTypeDef,
  GetHousesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHousesIdRequest$ {
  /** @deprecated use `GetHousesIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetHousesIdRequest$inboundSchema;
  /** @deprecated use `GetHousesIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetHousesIdRequest$outboundSchema;
  /** @deprecated use `GetHousesIdRequest$Outbound` instead. */
  export type Outbound = GetHousesIdRequest$Outbound;
}

export function getHousesIdRequestToJSON(
  getHousesIdRequest: GetHousesIdRequest,
): string {
  return JSON.stringify(
    GetHousesIdRequest$outboundSchema.parse(getHousesIdRequest),
  );
}

export function getHousesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetHousesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetHousesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetHousesIdRequest' from JSON`,
  );
}

/** @internal */
export const GetHousesIdResponse$inboundSchema: z.ZodType<
  GetHousesIdResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.HouseDto$inboundSchema, z.string()]);

/** @internal */
export type GetHousesIdResponse$Outbound =
  | components.HouseDto$Outbound
  | string;

/** @internal */
export const GetHousesIdResponse$outboundSchema: z.ZodType<
  GetHousesIdResponse$Outbound,
  z.ZodTypeDef,
  GetHousesIdResponse
> = z.union([components.HouseDto$outboundSchema, z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHousesIdResponse$ {
  /** @deprecated use `GetHousesIdResponse$inboundSchema` instead. */
  export const inboundSchema = GetHousesIdResponse$inboundSchema;
  /** @deprecated use `GetHousesIdResponse$outboundSchema` instead. */
  export const outboundSchema = GetHousesIdResponse$outboundSchema;
  /** @deprecated use `GetHousesIdResponse$Outbound` instead. */
  export type Outbound = GetHousesIdResponse$Outbound;
}

export function getHousesIdResponseToJSON(
  getHousesIdResponse: GetHousesIdResponse,
): string {
  return JSON.stringify(
    GetHousesIdResponse$outboundSchema.parse(getHousesIdResponse),
  );
}

export function getHousesIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetHousesIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetHousesIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetHousesIdResponse' from JSON`,
  );
}
